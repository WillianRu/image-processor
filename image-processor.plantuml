@startuml

!define ENTITY class
!define SERVICE interface
!define VALUE_OBJECT class
!define ADAPTER class
!define APPLICATION_SERVICE class

package Dominio {
    ENTITY Image {
        - byte[] data
        - ImageFormat format
        - String name
        + Image(byte[] data, ImageFormat format, String name)
        + changeFormat(ImageFormat newFormat)
    }

    VALUE_OBJECT ImageFormat {
        - String format
        + ImageFormat(String format)
        + static ImageFormat png()
        + static ImageFormat jpeg()
    }

    SERVICE ImageConverterService {
        + convertToFormat(Image image, ImageFormat targetFormat) : Image
    }
}

package Aplicacion {
    APPLICATION_SERVICE ImageProcessingService {
        - ImageConverterService imageConverter
        + ImageProcessingService(ImageConverterService imageConverter)
        + processImage(Image image, ImageFormat targetFormat) : Image
    }
}

package Adaptadores {
    ADAPTER HttpController {
        - ImageProcessingService imageProcessingService
        + HttpController(ImageProcessingService imageProcessingService)
        + handleRequest(byte[] imageData)
    }

    ADAPTER ImageConverterServiceImpl implements Dominio.ImageConverterService {
        + convertToFormat(Image image, ImageFormat targetFormat) : Image
    }
}

Dominio.Image  --> Dominio.ImageFormat
Aplicacion.ImageProcessingService  --> Dominio.ImageConverterService
Adaptadores.HttpController  -->  Aplicacion.ImageProcessingService


@enduml
